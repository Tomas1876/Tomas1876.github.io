{"posts":[{"title":"[TS] Destructing","text":"(a:number)와 ({a} : {a:number})의 차이리액트와 타입스크립트를 이용해 투두 리스트를 만드는 중에 궁금한 것이 생겼다. 12345678910111213// 1const TodoList = (list: Array&lt;Todo&gt;) =&gt; { return ( ... );};//2const TodoList = ({list} : { list: Array&lt;Todo&gt; }) =&gt; { return ( ... );}; 12345678910const TodoPage = () =&gt; { ... return( &lt;Main&gt; &lt;h2&gt;할일 목록&lt;/h2&gt; ... &lt;TodoList list={todos} /&gt; &lt;/Main&gt; );} 위와 같이 TodoList를 작성하고 TodoPage에서 list를 넘겨주려고 했을 때, 1번처럼 작성하면 다음과 같은 에러가 발생한다. “Type { list: Todo[]; } is not assignable to type ‘IntrinsicAttributes &amp; Todo[]’.\\n Property ‘list’ does not exist on type ‘IntrinsicAttributes &amp; Todo[]’.” 그러나 2번처럼 작성하면 에러가 발생하지 않는다.무슨 차이지? IntrinsicAttributes라는 키워드로 타입스크립트 공식 문서도 찾아봤지만 내가 원하는 답은 없었다.그러다가 머릿속을 스친 문장 하나가 있었다. 타입스크립트에서 구조분해할당은 어떻게 하지? 생각해보니 함수의 인자 부분을 ({ list }) 로 받는 건 일반 js에서는 구조분해할당을 할 때 사용하는 문법이었다.그래서 destructing으로 다시 검색했다. Destructuring also works in function declarations. For simple cases this is straightforward: 1234type C = { a: string; b?: number };function f({ a, b }: C): void { // ...} Destructing타입스크립트 공식문서 타입스크립트라고 너무 어렵게 생각한 게 문제였다.","link":"/ts-destructing/"},{"title":"[react] 도전! 리액트 todo list 만들기(1)","text":"나의 리액트 &amp; 타입스크립트 도전기리액트로 투두 리스트를 만들면서 서로 코드리뷰 해주는 스터디에 참여하게 되었다.이번에 배운 것, 그리고 앞으로 배울 것을 놓치지 않기 위해 기록할 장소를 마련했다. 작년에 국비 학원에서 자바-스프링 웹개발자 과정을 수료하고 그 와중에 프론트엔드 개발자가 되고 싶어 리액트를 독학해 취업을 준비하다가 좌절한 경험이 있다. 그 때의 패인은 ‘조급함’이었다. 리액트로 취업을 하지 못했고 경력을 쌓아야겠다는 마음이 급해 우선 자바로 취업을 했다. 그리고 돌고 돌아 1년 후, 다시 리액트로 취업을 준비하게 되었다. 급하게 가려다가 비껴간 길로 1년을 달리다 돌아온 지금, 다시 조금해지는 마음을 가라앉히고 내가 해야 할 일과 하고 싶은 일을 정리하려 한다. 이 스터디로 내가 얻고 싶은 것은 다음과 같다. 리액트 다지기 react hook recoil react-router react-query 타입스크립트 다지기 커밋 컨벤션 익히기 코드 리뷰 문화에 익숙해지기 공식 문서 읽는 습관 들이기(지식에 대한 태도 :star:) github","link":"/react-todo-1/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/hello-world/"},{"title":"git hooks로 커밋 전에 console.log 남아있는지 확인하기","text":"커밋 전에 console.log() 지워주세요 :innocent: 코드 리뷰를 몇 번이나 받아봤다고 벌써 두 번이나 이런 코멘트를 받았다.아마 나만 이런 코멘트를 받는 것은 아닐 것이다.나 같아도 리뷰해야 하는 코드에 이런 부분이 보이면 집어 줄 것 같다.이대로 운영에 배포 한다고 생각한다면 끔찍하기도 하고 개발 중인 코드에도 console.log()가 있어서 흐름을 파악하는 데에 방해가 되면 되었지 도움이 될 리는 없기 때문이다. 불필요한 console.log()는 최대한 빨리 삭제하고 순수하게 필요한 코드만 남기는 습관을 들여야 한다고 생각한다. 하지만 개발에 집중하면서 커밋하고, 수정하고, 커밋하고를 반복하다보면 console.log()를 삭제해야 한다는 걸 까먹을 때가 생기는 것 같다. 오죽하면 모니터에 포스트잇으로 제발 console.log() 좀 삭제하라고 써서 붙여두었는데, 하루도 못 가서 떨어지더라.이렇게 편리하고 자동화 된 것이 많은 시절에 console.log()만 온전히 내 기억력이나 조심성에 의존해서 제거해야 하는 것일까? 알아서 console.log()를 삭제해주는 툴은 없을까? 분명 나 말고도 수 많은 사람들이 비슷한 고민을 하고 머리 좋은 사람들이 좋은 걸 만들어두었을 거라는 생각이 들었다. 찾아보니 정말로 있었다, 자동으로 console.log()를 삭제해주는 플러그인이. 하지만 이건 dev가 아니라 실제 배포를 할 때 적용하는 거였기 때문에 내가 찾는 것과는 달랐다.처음에는 vscode 익스텐션, 혹은 자바스크립트 내장 기능으로 검색했다. 그런데 생각해보니 내가 진짜 원하는 건 console.log() 를 ‘삭제’하는 것이 아니라 ‘커밋 전에’ console.log()를 삭제하는 것이었다. git 과 연관하여 console.log() 삭제에 대해 검색하니 바로 내가 원하는 것이 나왔다. 1234567891011121314151617181920#!/bin/sh# Redirect output to stderr.exec 1&gt;&amp;2# enable user inputexec &lt; /dev/ttyconsoleRegexp='^[^-].*console.log'filenameRegexp='^[^-].*console.log(\\|^+++'if test &quot;$(git diff --cached | grep -c &quot;$consoleRegexp&quot;)&quot; != 0then exec git diff --cached | grep -ne &quot;$filenameRegexp&quot; | grep -B 1 &quot;$consoleRegexp&quot; read -rp &quot;There are some occurrences of console.log at your modification. Are you sure want to continue? (y/n) &quot; yn if echo &quot;$yn&quot; | grep &quot;^[Yy]$&quot; then exit 0; #THE USER WANTS TO CONTINUE else exit 1; # THE USER DONT WANT TO CONTINUE SO ROLLBACK fifi 출처 GitHub Gist 위 코드를 .git/hooks/pre-commit 파일에 추가하면 변경사항에 console.log()가 있는 경우 커밋하려고 할 때 알려준다. 이때 n를 선택하면 커밋이 취소된다. 파일명까지 알려주니 수정하기 편할 것 같다.(만약 pre-commit 파일의 이름이 pre-commit.sample 이라면 .sample을 없애야 적용된다) 이제 쓸데없는 코드를 깃에 올리지 않을 수 있을 것 같다.","link":"/git-hook-delete-console-log/"}],"tags":[{"name":"front-end","slug":"front-end","link":"/tags/front-end/"},{"name":"react","slug":"react","link":"/tags/react/"},{"name":"typescript","slug":"typescript","link":"/tags/typescript/"},{"name":"dev","slug":"dev","link":"/tags/dev/"},{"name":"git","slug":"git","link":"/tags/git/"}],"categories":[{"name":"typescript","slug":"typescript","link":"/categories/typescript/"},{"name":"react","slug":"react","link":"/categories/react/"},{"name":"git","slug":"git","link":"/categories/git/"}],"pages":[]}